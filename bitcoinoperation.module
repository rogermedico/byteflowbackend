<?php

/**
 * @file
 * Bitcoin Operation module hooks
 */

use Drupal\core\Form\FormStateInterface;
use Drupal\node\NodeInterface;
use \Drupal\node\Entity\Node;

/**
 *
 * Implements hook_form_alter() to make node title hidden and not required
 *
 * @param $form
 * @param \Drupal\core\Form\FormStateInterface $form_state
 * @param $form_id
 */
function bitcoinoperation_form_alter(&$form, FormStateInterface $form_state, $form_id) {

  /* title field */
  if ($form_id === 'node_bitcoin_operation_form' || $form_id === 'node_bitcoin_operation_edit_form') {
    $form['title']['widget'][0]['value']['#value'] = t('should change after');
    $form['title']['widget'][0]['value']['#required'] = false;
    $form['title']['#type'] = 'hidden';
  }

  /* price field when create node */
  if ($form_id === 'node_bitcoin_operation_form') {
    $form['#attached']['library'][] = 'bitcoinoperation/bitcoinoperation';
  }

  /* price field when edit node */
  if ($form_id === 'node_bitcoin_operation_edit_form') {
    $form['price']['#disabled'] = true;
  }

}

/**
 *
 * Implements hook_node_presave() to change title before save the node
 *
 * @param \Drupal\node\NodeInterface $node
 */
function bitcoinoperation_node_presave(NodeInterface $node) {
  if($node->getType() === 'bitcoin_operation') {
    $price = $node->get('price')->value;
    $number = $node->get('number')->value;
    $node->setTitle($number . ' x (' . $price . ')');
  }
}

/**
 * Implements hook_uninstall() to remove all nodes created under
 * bitcoin_operation content type.
 *
 * @throws \Drupal\Core\Entity\EntityStorageException
 */
function bitcoinoperation_uninstall() {
  $query = \Drupal::entityQuery('node')->condition('type', 'bitcoin_operation');
  $nids = $query->execute();
  foreach ($nids as $nid) {
    Node::load($nid)->delete();
  }
}

